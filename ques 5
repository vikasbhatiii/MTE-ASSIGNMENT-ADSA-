// 5.Find the Maximum Sum of Any Subarray of Size K

public class MaxSubarraySum {
    public static int maxSum(int[] arr, int k) {
        int n = arr.length;

        if (n < k) {
            System.out.println("Invalid input: k is greater than array size");
            return -1;
        }

        int windowSum = 0;
        for (int i = 0; i < k; i++) {
            windowSum += arr[i];
        }

        int maxSum = windowSum;

        for (int i = k; i < n; i++) {
            windowSum = windowSum - arr[i - k] + arr[i];
            maxSum = Math.max(maxSum, windowSum);
        }

        return maxSum;
    }

    public static void main(String[] args) {
        int[] arr = {2, 1, 5, 1, 3, 2};
        int k = 3;

        int result = maxSum(arr, k);
        System.out.println("Maximum sum of subarray of size " + k + " is: " + result);
    }
}

// time complexity =  O(n)
// space co mplexity = O(1)
